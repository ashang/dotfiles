# sway configuration file
# Copy this to ~/.config/sway/config and edit it to your liking.
# Read `man 5 sway` for a complete reference.

# https://github.com/swaywm/sway/wiki


#
# exec --no-startup-id compton -b
#exec --no-startup-id nm-applet
#exec --no-startup-id xss-lock -- i3lock-fancy
#exec --no-startup-id xset r rate 250 25
#exec --no-startup-id xset b off
#exec --no-startup-id setxkbmap -option caps:escape
#exec --no-startup-id nightshift -l 39.0315533:-94.4954291 -d
##exec --no-startup-id setxkbmap -model apple_laptop -layout us -variant dvp

font pango:FiraCode, FontAwesome 12

### Variables

## Keyboard mappings
## Mod4: Logo key
#set $mod Mod4
set $mod Mod1
#set $sup Mod4
#set $alt Mod1
#bindsym $mod+j                "mark --toggle a"
#bindsym Pause                 exec grim -t png "/tmp/$(date '+%Y-%m-%d %H:%M:%S').png"

#bindsym [--release] [Modifiers+]keysym command
#bindcode [--release] [Modifiers+]keycode command
# [Modifiers+] is a list of modifiers separated and ended with +. Recognized modifiers are
#    Mod1 (usually aka "Alt" or "Meta")
#    Mod2 ("NumLock")
#    Mod3 (unused on default QWERTY layout)
#    Mod4 (aka "Super" or "Windows-Key")
#    Mod5 (e.g. "Alt_Gr" on german QWERTZ layout)
#    Shift
#    Control
#    Mode_Switch

# use xmodmap -pm to get a list of modifiers and the key symbols and codes they are mapped to.
#For the US layout ("QWERTY") it looks something like that:
#xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):
#
#shift       Shift_L (0x32),  Shift_R (0x3e)
#lock        Caps_Lock (0x42)
#control     Control_L (0x25),  Control_R (0x69)
#mod1        Alt_L (0x40),  Alt_R (0x6c),  Meta_L (0xcd)
#mod2        Num_Lock (0x4d)
#mod3      
#mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
#mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)

#mode "chooser" {
#bindsym 1 exec chromium, mode "default"
#bindsym 2 exec firefox, mode "default"
## ...
#}
#bindsym $mod+i mode chooser

mode "launcher" {
  bindsym 1 exec chromium
  bindsym 2 exec firefox
  # Return to default mode
  bindsym Return mode "default"
}
  bindsym $mod+i mode "launcher"




# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
#set $term terminator
set $term i3-sensible-terminal

# Your preferred application launcher
set $menu dmenu_run

### Output configuration
# man 5 sway-output
# force_xinerama yes
# fake-outputs 3840x1080+0+0
#include /home/max/.local/share/base16/base16-sway/themes/base16-tomorrow-night.config
#include config_exec

#output LVDS-1 {
    ## pos  0 420
    #pos  0 0
    ## res  1920x1080
    ## background ~/.local/share/backgrounds/02-procrastination-hd1080.png center $base01
    #background ~/.local/share/backgrounds/osb3unzg9j941-1280.png stretch $base01
    #dpms on
#}

# Default wallpaper
# output HDMI-A-1 bg ~/wallpaper.png stretch
# output HDMI-A-1 resolution 1920x1080 position 1920,0
#output * background ~/Pictures/backgrounds/yosemite.jpg fill
#output eDP-1 bg ~/Pictures/backgrounds/Water.of.Leith.by.Keanu.Kerr.jpg stretch
output HDMI-A-1 bg ~/Pictures/backgrounds/yosemite.jpg fill
# How to get outputs configurable - $ swaymsg -t get_outputs
output eDP-1 {
               bg ~/Pictures/backgrounds/Water.of.Leith.by.Keanu.Kerr.jpg stretch
               resolution 1920x1080
               #scale 1.4
             }

# You can get the names of your outputs by running: swaymsg -t get_outputs

# $ swaymsg -t get_outputs
# Output eDP-1
#   Geometry: 1366x768 @ 0,0
#   Scale factor: 1x
#   Workspace: 1

# Output HDMI-A-1
#  Geometry: 2560x1440 @ 1366,0
#  Scale factor: 1x
#  Workspace: 9


### Input configuration

# input 16700:8467:Dell_KB216_Wired_Keyboard_Consumer_Control {
#     xkb_layout "us"
#     xkb_variant "altgr-intl,nodeadkeys"
#     xkb_options "keypad:pointerkeys,grp_led:caps,grp:caps_toggle,terminate:ctrl_alt_bksp"
#     xkb_model "pc105"
#     xkb_numlock "enable"
#     repeat_delay 100
#     repeat_rate 330
# }

input * xkb_layout "us"
#input * xkb_variant "altgr-intl"
# input * xkb_options "grp:win_space_toggle"
# input "MANUFACTURER1 Keyboard" xkb_model "pc101"

# finally keyboard configuration in sway :)
# input 1:1:AT_Translated_Set_2_keyboard {
#     xkb_layout us,de
#     xkb_variant intl
#     # xkb_options grp:alt_shift_toggle
# }

#input "1:1:AT_Translated_Set_2_keyboard" {
#    xkb_model "jp(OADG109A)"
#    xkb_options "grp:rctrl_rshift_toggle,grp_led:scroll"
#    xkb_numlock enabled
#}
#    exec_always fcitx -r

input "1739:52390:DELL089C:00_06CB:CCA6_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
# Inputs - Get your inputs with the command:
# swaymsg -t get_inputs

# "identifier": "1739:52390:DELL089C:00_06CB:CCA6_Touchpad",
#     "name": "DELL089C:00 06CB:CCA6 Touchpad",
#     "vendor": 1739,
#     "product": 52390,
#     "type": "touchpad",
#     "libinput": {
#       "send_events": "enabled",
#       "tap": "disabled",
#       "tap_button_map": "lrm",
#       "tap_drag": "enabled",
#       "tap_drag_lock": "disabled",
#       "accel_speed": 0.0,
#       "accel_profile": "none",
#       "natural_scroll": "disabled",
#       "left_handed": "disabled",
#       "click_method": "button_areas",
#       "middle_emulation": "disabled",
#       "scroll_method": "two_finger",
#       "dwt": "enabled"
#     }
#   },

# Example configuration:
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+shift+Return exec $term

    #bindsym $mod+p exec grim -g "$(slurp -d)" - | wl-copy
    bindsym Print exec grim -g "$(slurp)" -t png - | wl-copy -t image/png
    # https://github.com/emersion/slurp https://github.com/emersion/grim https://github.com/bugaevc/wl-clipboard

    # capture all screens to clipboard
    bindsym shift+Print exec grim - | wl-copy

    # capture the specified screen area to clipboard
    bindsym shift+Alt+Print exec grim -g "$(slurp)" - | wl-copy

    # capture the focused monitor to clipboard
    bindsym shift+Control+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy


    # kill focused window
    bindsym $mod+shift+q kill

    # start your launcher
    bindsym $mod+shift+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.

    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal


    # reload config
    bindsym $mod+Shift+c                                       reload
    ## mode resize had been using $mod+Shift+r
    # To avoid accidental restart, no binding for `restart`

    # exit sway (logs you out of your wayland session)
    bindsym $mod+shift+e exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # _move_ the focused window with the same, but add shift
    bindsym $mod+shift+$left move left
    bindsym $mod+shift+$down move down
    bindsym $mod+shift+$up move up
    bindsym $mod+shift+$right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+shift+1 move container to workspace 1
    bindsym $mod+shift+2 move container to workspace 2
    bindsym $mod+shift+3 move container to workspace 3
    bindsym $mod+shift+4 move container to workspace 4
    bindsym $mod+shift+5 move container to workspace 5
    bindsym $mod+shift+6 move container to workspace 6
    bindsym $mod+shift+7 move container to workspace 7
    bindsym $mod+shift+8 move container to workspace 8
    bindsym $mod+shift+9 move container to workspace 9
    bindsym $mod+shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Switch the current container between different layout styles
    bindsym $mod+shift+s layout stacking
    bindsym $mod+shift+w layout tabbed
    bindsym $mod+shift+t layout toggle split

    # IME may use super+space
    #bindsym $mod+shift+space floating toggle
    #bindsym $mod+space focus mode_toggle

    # Toggle between tiling and floating mode
    bindsym $mod+shift+g floating toggle

    # Swap focus between tiling and floating area
    bindsym $mod+shift+o focus mode_toggle

    # move focus to the parent container
    bindsym $mod+shift+p focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

bindsym $mod+shift+r mode "resize"
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Status Bar:
# Read `man 5 sway-bar` for more information
bar {
    ##position top
    position bottom
    swaybar_command waybar
    #colors {
        #statusline #ffffff
        #background #323232
        #inactive_workspace #32323200 #32323200 #5c5c5c
    #}
}
bindsym $mod+t exec swaybar

# negative offsets are also working!
# Screen modes. Note mirroring is not yet properly supported by sway :(
#- Putting the external monitor to the left with 'l'
#- Putting it to the right with 'r'
#- Disabling it with 'o'
#- Mirroring it with 'm'
set $mode_display AUX SCREEN: (l) LEFT (r) RIGHT (o) OFF (m) MIRROR
mode "$mode_display" {
    bindsym l output $scr_aux enable, output $scr_main pos 0 0, output $scr_aux pos -$native_width 0, mode "default"
    bindsym r output $scr_aux enable, output $scr_main pos 0 0, output $scr_aux pos $native_width 0, mode "default"
    bindsym m output $scr_aux enable, output $scr_main pos 0 0, output $scr_aux pos 0 0, mode "default"
    bindsym o output $scr_aux disable, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+shift+x mode "$mode_display"

#$laptop = 1920x1080, scale=1.3 (1920/1.3 = 1476.92 -> 1477)
set $laptop = res 1920x1080, scale=1.0
set $external = res 2560x1440 scale=1.0
bindsym $mod+shift+n output eDP-1 $laptop pos 0 0; output HDMI-A-1 $external pos 2000 0
bindsym $mod+shift+m output $external pos 0 0; output $laptop pos 2560 0

# HDMI-A-1 on top of eDP-1
bindsym $mod+y output HDMI-A-1 pos 0 0 res 2560x1440; output eDP-1 pos 0 1440 res 1920x1080
# HDMI-A-1 on right of eDP-1
#bindsym $mod+shift+z output HDMI-A-1 pos 1920 0 ; output eDP-1 pos 0 0
bindsym $mod+shift+z output HDMI-A-1 pos 1920 0 res 2560x1440 ; output eDP-1 pos 0 0 res 1920x1080
#bindsym $mod+shift+z output eDP-1 pos 0 0 res 1920x1080; output HDMI-A-1 pos 1920 0 res 2560x1440

## focus to monitor at startup
#focus output <name-or-id>
#exec swaymsg focus output <name-or-id>

#output eDP-1 {
#    resolution 1920x1080 position 0,0
#    scale 1.2
#}

# font pango:Cantarell 14px

include security.d/*


# Floating windows

for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable

for_window [window_role="task_dialog|bubble|page-info|Preferences|pop-up"] floating enable
for_window [window_role="Open Files"] floating enable sticky
for_window [window_role="File Operation Progress"] floating enable sticky
for_window [window_role="Save As"] floating enable

for_window [class="qBittorrent" window_role="pop-up"] floating enable
for_window [class="mtp-ng-qt" window_role="Open"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
#for_window [class="VirtualBox"] floating enable

# Sticky window
for_window [instance="file_progress"]  sticky enable
for_window [class="info|Mate-color-select|gcolor2|timesup|QtPass|GtkFileChooserDialog"] sticky enable

# Teamviewer
for_window [instance="TeamViewer.exe"] floating enable
for_window [class="TeamViewer"] floating enable
#for_window [instance="Qt-subapplication" title="TeamViewer"] move scratchpad

# Focus window settings
no_focus [window_role="pop-up"]
focus_on_window_activation focus 
#for_window [class="(?i)"] focus 

## Rename workspace with i3-input using numbers and text
#bindsym $mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New name for this workspace: '

## border
default_border none
#default_border normal 0
#for_window [<criteria>] border none|pixel
for_window [class="chromium" instance="chromium"] border none
for_window [class="terminator" instance="terminator"] border normal 0
for_window [class="i3-sensible-terminal" instance="i3-sensible-terminal"] border 0

#for tabbed and stacked containers and the following border modes: none and pixel. The following has no effect for border normal, which is the default. The two border modes hide title bars (and borders for the former) for split layouts. However, the titlebars are retained for tabbed and stacked layouts.
#If hide_edge_borders --i3 both|smart is given, the title bars will be hidden when there is only one child of the tabbed/stacked container (which matches i3's behavior). If hide_edge_borders both|smart is given, the title bar is retained even when there is only one child.

# screenshot
bindsym --release Print exec --no-startup-id "maim -p 0 -c 0.96,0.5,0.09 $HOME/Pictures/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"
bindsym --release Shift+Print exec --no-startup-id "maim -s -p 0 -c 0.96,0.5,0.09 $HOME/Pictures/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"

#### env

#IMSETTINGS_INTEGRATE_DESKTOP=yes
#IMSETTINGS_MODULE=ibus
#QT_IM_MODULE=ibus
#XMODIFIERS=@im=ibus
#GTK_IM_MODULE=ibus
## export GTK_IM_MODULE_FILE=/usr/lib/gtk-3.0/3.0.0/immodules.cache
#GTK_IM_MODULE_FILE=/etc/gtk-2.0/gtk.immodules
#XDG_CURRENT_DESKTOP=Unity


### Execute (autostart) further applications

#! exec: execute when starting
#! exec_always: execute when starting or restarting
# ================================================================================
## load xrdb
#exec xrdb ~/.Xresources ; swaymsg reload
#exec ibus-daemon --xim -d


# exec xrandr --output HDMI-1 --right-of DP-1
# exec xrandr --output HDMI-1 --right-of VGA-1
# exec /usr/bin/xrandr-reset.sh
# exec setsid xautolock -locker swaylock

#exec swayidle -w timeout 300 'swaylock -f' timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' before-sleep 'swaylock -f -c 000000'

# exec gnome-keyring-daemon --start --components=secrets
# start compositor...
# exec compton -b --config ~/.config/i3/compton.conf
# exec nitrogen --restore

#
#exec mako
#bindsym ctrl+space            exec makoctl dismiss -a
#

## exec ibus-daemon -drx
#exec nm-applet
## exec pidgin
#exec bash -c 'for d in ~/.config/autostart/*.desktop; do awk -e \'match($0,"Exec=(.*)",q){ gsub(/ %.+/, "", q[1]); system("setsid -f " q[1])};\' $d; done'

# exec setxkbmap de,us -device evdev -model pc105 -option "" -option keypad:pointerkeys,grp_led:caps,grp:caps_toggle,terminate:ctrl_alt_bksp -v 1 -print
# exec xset r rate 330 40
# exec xinput --set-prop 'Xornet gaming mouse' 'libinput Accel Speed' 0.1
# exec setxkbmap -option caps:escape
# exec setsid hexchat -e --minimize=2
# exec termite  -e /home/max/.local/bin/weechat
#exec khal list today 500d > $HOME/.motd

#

# exec xrandr --output DP-1 --rotate left --pos 1920x-420
# exec xrandr --output DP1 --rotate left --right-of HDMI1
# exec xrandr --output DP1 --rotate left --pos 1920x-420


# bindsym $mod+d exec --no-startup-id j4-dmenu-desktop
# exec xrandr --dpi 95.48 --output LVDS-1 --mode 1024x768 && xrandr --output LVDS-1 --mode 1280x800
# bindcode 156




# vim: iskeyword+=\$,\-,\#,(,) nospell ft=tcl
