# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 160
    lines: 48

  # Window padding (changes require restart)
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 50000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

  # If both are `0`, this setting is ignored.
  # Window position (changes require restart)
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons

  # Setting this to false will result in window without borders and title bar.
  decorations: false

  # Startup Mode (changes require restart)
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Allow terminal applications to change Alacritty's window title.
  #dynamic_title: true

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

# Spaces per Tab (changes require restart)
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font
font:
  # Normal (roman) font face
  normal:
    # Font family
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: Inconsolata

    # The `style` can be specified to pick a specific face.
    style: Regular

  bold:
    # If not specified, fall back to that specified for normal
    family: Inconsolata
    style: Bold

  italic:
    # If not specified, fall back to that specified for normal
    family: Inconsolata
    style: Italic

  bold_italic:
    family: Inconsolata
    style: Bold Italic

  # Point size
  size: 12.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 1
    y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`

  # This is a global setting and will require a log out or restart to take
  # effect.

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0


# Colors (Tomorrow Night Bright)
colors:
  # Default
  primary:
    background: '0x353535'
    foreground: '0xe8e8e8'
    #background: '0x191919'
    #foreground: '0xeaeaea'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #dim_foreground: '0x9a9a9a'
    #bright_foreground: '0xffffff'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are unset,
  # the cursor color will be the inverse of the cell color.
  #cursor:
  #  text: '0x000000'
  #  cursor: '0xffffff'
  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text:   '0xf1c1c1'
    cursor: '0xff2600'


  # Selection colors
  #
  # Colors which should be used to draw the selection area. If selection
  # background is unset, selection color will be the inverse of the cell colors.
  # If only text is unset the cell text color will remain the same.
  selection:
    text: '0x282a36'
    background: '0xbbc5ff'

  # Normal colors
  #normal:
  #  black:   '#1d1f21'
  #  red:     '#cc6666'
  #  green:   '#b5bd68'
  #  yellow:  '#f0c674'
  #  blue:    '#81a2be'
  #  magenta: '#b294bb'
  #  cyan:    '#8abeb7'
  #  white:   '#c5c8c6'

  # Bright colors
  #bright:
  #  black:   '#666666'
  #  red:     '#d54e53'
  #  green:   '#b9ca4a'
  #  yellow:  '#e7c547'
  #  blue:    '#7aa6da'
  #  magenta: '#c397d8'
  #  cyan:    '#70c0b1'
  #  white:   '#eaeaea'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '#131415'
  #  red:     '#864343'
  #  green:   '#777c44'
  #  yellow:  '#9e824c'
  #  blue:    '#556a7d'
  #  magenta: '#75617b'
  #  cyan:    '#5b7d78'
  #  white:   '#828482'


  # Normal colors
  #normal:
  #  black:   '0x282a36'
  #  red:     '0xf07178'
  #  green:   '0xc3e88d'
  #  yellow:  '0xffcb6b'
  #  blue:    '0x82aaff'
  #  magenta: '0xc792ea'
  #  cyan:    '0x89ddff'
  #  white:   '0xd0d0d0'

  # Bright colors
  #bright:
  #  black:   '0x434758'
  #  red:     '0xff8b92'
  #  green:   '0xddffa7'
  #  yellow:  '0xffe585'
  #  blue:    '0x9cc4ff'
  #  magenta: '0xe1acff'
  #  cyan:    '0xa3f7ff'
  #  white:   '0xffffff'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  dim:
    black:   '0x000000'
    red:     '0x8c3336'
    green:   '0x7a8530'
    yellow:  '0x97822e'
    blue:    '0x506d8f'
    magenta: '0x80638e'
    cyan:    '0x497e7a'
    white:   '0x9a9a9a'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '0xff00ff' }`
  #
  #indexed_colors: []


  # Normal colors
  normal:
    black:   '0x000000'
    red:     '0xd54e53'
    green:   '0xb9ca4a'
    yellow:  '0xe6c547'
    blue:    '0x7aa6da'
    magenta: '0xc397d8'
    cyan:    '0x70c0ba'
    white:   '0xffffff'

  # Bright colors
  bright:
    black:   '0x666666'
    red:     '0xff3334'
    green:   '0x9ec400'
    yellow:  '0xe7c547'
    blue:    '0x7aa6da'
    magenta: '0xb77ee0'
    cyan:    '0x54ced6'
    white:   '0xffffff'

  # Dim colors (Optional)
  dim:
    black:   '0x333333'
    red:     '0xf2777a'
    green:   '0x99cc99'
    yellow:  '0xffcc66'
    blue:    '0x6699cc'
    magenta: '0xcc99cc'
    cyan:    '0x66cccc'
    white:   '0xdddddd'


# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
# background_opacity: 1.0
background_opacity: 0.9


# Live config reload (changes require restart)
live_config_reload: true

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - â–‡ Block
  #   - _ Underline
  #   - | Beam
  style: Block
  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  # Otherwise, it will remain non-hollow.
  unfocused_hollow: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login


# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false



hints:
  enabled:
    - regex: "(magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
              [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^âŸ¨âŸ©`]+"
      command: google-chrome
      post_processing: true
      mouse:
        enabled: true
    # multi regex for different purposes:
    # 1. Kubernetes Resources
    # 2. UUIDs
    # 3. hex (for example signatures)
    # 4. IP addresses
    - regex: '((deployment.app|binding|componentstatuse|configmap|endpoint|event|limitrange|namespace|node|persistentvolumeclaim|persistentvolume|pod|podtemplate|replicationcontroller|resourcequota|secret|serviceaccount|service|mutatingwebhookconfiguration.admissionregistration.k8s.io|validatingwebhookconfiguration.admissionregistration.k8s.io|customresourcedefinition.apiextension.k8s.io|apiservice.apiregistration.k8s.io|controllerrevision.apps|daemonset.apps|deployment.apps|replicaset.apps|statefulset.apps|tokenreview.authentication.k8s.io|localsubjectaccessreview.authorization.k8s.io|selfsubjectaccessreviews.authorization.k8s.io|selfsubjectrulesreview.authorization.k8s.io|subjectaccessreview.authorization.k8s.io|horizontalpodautoscaler.autoscaling|cronjob.batch|job.batch|certificatesigningrequest.certificates.k8s.io|events.events.k8s.io|daemonset.extensions|deployment.extensions|ingress.extensions|networkpolicies.extensions|podsecuritypolicies.extensions|replicaset.extensions|networkpolicie.networking.k8s.io|poddisruptionbudget.policy|clusterrolebinding.rbac.authorization.k8s.io|clusterrole.rbac.authorization.k8s.io|rolebinding.rbac.authorization.k8s.io|role.rbac.authorization.k8s.io|storageclasse.storage.k8s.io)[[:alnum:]_#$%&+=/@-]+)|([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|([0-9a-f]{12,128})|([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})'
      action: Copy
      post_processing: false
      binding:
        key: U
        mods: Control|Shift



# Mouse bindings
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

  hints:
    # URL launcher
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    launcher: open
        # this will call `x-www-browser`
    #####
    #See - regex: "(magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
    #####
    #  program: xdg-open
    #launcher:
    #  program: xdg-open
    #  args: []
    # URL modifiers
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: Control|Shift
    enabled:
      - regex: '([0-9a-f]{12,128})|([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})'
        action: Copy
        # action: x-www-browser
        post_processing: false
        binding:
          key: U
          mods: Control|Shift

# And optionally:
# - `mods` (see key bindings)

selection:
 #semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: true

# Allow terminal applications to change Alacritty's window title.
window.dynamic_title: true


# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Each key binding will specify a:
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
# - `mods`: Key modifiers to filter binding actions
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.

# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
#key_bindings:
#  - { key: V,        mods: Command, action: Paste                        }
#  - { key: C,        mods: Command, action: Copy                         }
#  - { key: Q,        mods: Command, action: Quit                         }
#  - { key: N,        mods: Command, command: { program: "open", args: ["-nb", "io.alacritty"] } }
#  - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
#  - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
#  - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
#  - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
#  - { key: Key0,     mods: Command, action: ResetFontSize                }
#  - { key: Equals,   mods: Command, action: IncreaseFontSize             }
#  - { key: Minus,    mods: Command, action: DecreaseFontSize             }
#  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
#  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
#  - { key: PageUp,                  chars: "\x1b[5~"                     }
#  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
#  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
#  - { key: PageDown,                chars: "\x1b[6~"                     }
#  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
#  - { key: Back,                    chars: "\x7f"                        }
#  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
#  - { key: Insert,                  chars: "\x1b[2~"                     }
#  - { key: Delete,                  chars: "\x1b[3~"                     }
#  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
#  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
#  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
#  - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
#  - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
#  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
#  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
#  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
#  - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
#  - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
#  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
#  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
#  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
#  - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
#  - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
#  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
#  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
#  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
#  - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
#  - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
#  - { key: F1,                      chars: "\x1bOP"                      }
#  - { key: F2,                      chars: "\x1bOQ"                      }
#  - { key: F3,                      chars: "\x1bOR"                      }
#  - { key: F4,                      chars: "\x1bOS"                      }
#  - { key: F5,                      chars: "\x1b[15~"                    }
#  - { key: F6,                      chars: "\x1b[17~"                    }
#  - { key: F7,                      chars: "\x1b[18~"                    }
#  - { key: F8,                      chars: "\x1b[19~"                    }
#  - { key: F9,                      chars: "\x1b[20~"                    }
#  - { key: F10,                     chars: "\x1b[21~"                    }
#  - { key: F11,                     chars: "\x1b[23~"                    }
#  - { key: F12,                     chars: "\x1b[24~"                    }
#  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                   }
#  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                   }
#  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                   }
#  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                   }
#  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                  }
#  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                  }
#  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                  }
#  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                  }
#  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                  }
#  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                  }
#  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                  }
#  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                  }
#  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                   }
#  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                   }
#  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                   }
#  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                   }
#  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                  }
#  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                  }
#  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                  }
#  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                  }
#  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                  }
#  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                  }
#  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                  }
#  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                  }
#  - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                   }
#  - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                   }
#  - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                   }
#  - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                   }
#  - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                  }
#  - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                  }
#  - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                  }
#  - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                  }
#  - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                  }
#  - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                  }
#  - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                  }
#  - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                  }
#  - { key: F1,       mods: Command, chars: "\x1b[1;3P"                   }
#  - { key: F2,       mods: Command, chars: "\x1b[1;3Q"                   }
#  - { key: F3,       mods: Command, chars: "\x1b[1;3R"                   }
#  - { key: F4,       mods: Command, chars: "\x1b[1;3S"                   }
#  - { key: F5,       mods: Command, chars: "\x1b[15;3~"                  }
#  - { key: F6,       mods: Command, chars: "\x1b[17;3~"                  }
#  - { key: F7,       mods: Command, chars: "\x1b[18;3~"                  }
#  - { key: F8,       mods: Command, chars: "\x1b[19;3~"                  }
#  - { key: F9,       mods: Command, chars: "\x1b[20;3~"                  }
#  - { key: F10,      mods: Command, chars: "\x1b[21;3~"                  }
#  - { key: F11,      mods: Command, chars: "\x1b[23;3~"                  }
#  - { key: F12,      mods: Command, chars: "\x1b[24;3~"                  }
#  - { key: D,        mods: Command,       chars: "\x06\x76" } 
#  - { key: D,        mods: Command|Shift, chars: "\x06\x73" }
#  - { key: W,        mods: Command,       chars: "\x06\x78" }
#  - { key: H,        mods: Command,       chars: "\x06\x68" }
#  - { key: J,        mods: Command,       chars: "\x06\x6a" }
#  - { key: K,        mods: Command,       chars: "\x06\x6b" }
#  - { key: L,        mods: Command,       chars: "\x06\x6c" }
#  - { key: T,        mods: Command,       chars: "\x06\x63" }
#  - { key: RBracket, mods: Command|Shift, chars: "\x06\x6e" }
#  - { key: LBracket, mods: Command|Shift, chars: "\x06\x70" }
#  - { key: Return,   mods: Command|Shift, chars: "\x06\x7a" }
#  - { key: Key1,     mods: Command,       chars: "\x06\x31" }
#  - { key: Key2,     mods: Command,       chars: "\x06\x32" }
#  - { key: Key3,     mods: Command,       chars: "\x06\x33" }
#  - { key: Key4,     mods: Command,       chars: "\x06\x34" }
#  - { key: Key5,     mods: Command,       chars: "\x06\x35" }
#  - { key: Key6,     mods: Command,       chars: "\x06\x36" }
#  - { key: Key7,     mods: Command,       chars: "\x06\x37" }
#  - { key: Key8,     mods: Command,       chars: "\x06\x38" }
#  - { key: Key9,     mods: Command,       chars: "\x06\x39" }
#  - { key: Left,     mods: Command,       chars: "\x06\x48" }
#  - { key: Down,     mods: Command,       chars: "\x06\x4a" }
#  - { key: Up,       mods: Command,       chars: "\x06\x4b" }
#  - { key: Right,    mods: Command,       chars: "\x06\x4c" }

key_bindings:
    - { key: Return,        mods: Control|Shift, action: SpawnNewInstance }

# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#key_bindings:

  # (Windows, Linux, and BSD only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: M,      mods: Command,         action: Minimize         }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  #- { key: Paste,                    action: Paste                            }
  #- { key: Copy,                     action: Copy                             }
  #- { key: L,         mods: Control, action: ClearLogNotice                   }
  #- { key: L,         mods: Control, chars: "\x0c"                            }
  #- { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  #- { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  #- { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  #- { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }

# define multiple color schemes and use anchors to choose
schemes:
  solarized_light: &light
    primary:
      #...
    normal:
      #...
    bright:
      #...
  solarized_dark: &dark
    primary:
      #...
    normal:
      #...
    bright:
      #...

#colors: *light

colors:
  primary:
    background: '0x151718'
    foreground: '0xd6d6d6'
  cursor:
    cursor: '0xeeeeee'
  normal:
    black: '0x151718'
    red: '0xCd3f45'
    green: '0x9fca56'
    yellow: '0xe6cd69'
    blue: '0x55b5db'
    magenta: '0xa074c4'
    cyan: '0x55dbbe'
    white: '0xd6d6d6'
  bright:
    black: '0x41535B'
    red: '0xCd3f45'
    green: '0x9fca56'
    yellow: '0xe6cd69'
    blue: '0x55b5db'
    magenta: '0xa074c4'
    cyan: '0x55dbbe'
    white: '0xffffff'
  indexed_colors: []
  search:
    matches:
      foreground: '0x000000'
      background: '0xffffff'
    focused_matches:
      foreground: '0x000000'
      background: '0xffffff'
    bar:
      foreground: '0x000000'
      background: '0xffffff'
  hints:
    start:
      foreground: '0x000000'
      background: '0xffffff'
    end:
      foreground: '0x000000'
      background: '0xffffff'

# brew
colors:
  primary:
    background: '0x1b182c'
    foreground: '0xcbe3e7'

  normal:
    black:   '0x100e23'
    red:     '0xff8080'
    green:   '0x95ffa4'
    yellow:  '0xffe9aa'
    blue:    '0x91ddff'
    magenta: '0xc991e1'
    cyan:    '0xaaffe4'
    white:   '0xcbe3e7'

  # Bright colors
  bright:
    black:   '0x565575'
    red:     '0xff5458'
    green:   '0x62d196'
    yellow:  '0xffb378'
    blue:    '0x65b2ff'
    magenta: '0x906cff'
    cyan:    '0x63f2f1'
    white:   '0xa6b3cc'

# Colors (Ayu Dark)
colors:
  # Default colors
  primary:
    background: '0x0A0E14'
    foreground: '0xB3B1AD'

  # Normal colors
  normal:
    black: '0x01060E'
    red: '0xEA6C73'
    green: '0x91B362'
    yellow: '0xF9AF4F'
    blue: '0x53BDFA'
    magenta: '0xFAE994'
    cyan: '0x90E1C6'
    white: '0xC7C7C7'

  # Bright colors
  bright:
    black: '0x686868'
    red: '0xF07178'
    green: '0xC2D94C'
    yellow: '0xFFB454'
    blue: '0x59C2FF'
    magenta: '0xFFEE99'
    cyan: '0x95E6CB'
    white: '0xFFFFFF'

