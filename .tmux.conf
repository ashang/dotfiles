## Shift to C-a, useful when using `vi` mode bash
## Avoid using C-a, if you use picocom/minicom like which escape by C-a
## Shift to ^x? NO if you use Emacs, nano, etc.
set -g prefix M-x
#set-option -g prefix2 C-b

bind-key ` send-prefix
bind ^p pasteb
bind-key C-b send-prefix
#unbind C-b
#unbind ^b
#unbind-key C-b
#bind-key C-a send-prefix
#set -g prefix ^x
#bind a send-prefix
#set-option -g prefix C-a

# Set a shortcut for reloading tmux config
#bind r source-file ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"


bind-key F7 set-option -g prefix C-b
bind-key F8 set-option -g prefix `

# Rename terminals
set-option -g set-titles on
set-option -g set-titles-string '#(whoami)@#h:#W'
## `#h` is $(hostname -s)
## `#W` is Window name

set -g @shell_mode 'vi'

bind-key z kill-session
bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical

# keybindings to make resizing easier
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

#select last window, `C-a C-l`, not `C-a l`
bind-key C-l select-window -l
#TODO: to clear in bash VI mode

# f           Prompt to search for text in open windows.
# #           List all paste buffers.
# -           Delete the most recently copied buffer of text.
# =           Choose which buffer to paste interactively from a list.
# ,           Rename the current window.
# '           Prompt for a window index to select.
# .           Prompt for an index to move the current window.
# 0 to 9      Select windows 0 to 9.
# &           Kill the current window.
# i           Display some information about the current window.
# l           Move to the previously selected window.
# n           Change to the next window.
# p           Change to the previous window.
# w           Choose the current window interactively.
# M-n         Move to the next window with a bell or activity marker.
# M-p         Move to the previous window with a bell or activity marker.
# ;           Move to the previously active pane.
# o           Select the next pane in the current window.
# x           Kill the current pane.
# {           Swap the current pane with the previous pane.
# }           Swap the current pane with the next pane.
# !           Break the current pane out of the window.
# C-o         Rotate the panes in the current window forwards.
# M-o         Rotate the panes in the current window backwards.
#             Change to the pane above, below, to the left, or to the right of the current pane.
# M-1 to M-5  Arrange panes in one of the five preset layouts: even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled.
# C-Up, C-Down
# C-Left, C-Right
#             Resize the current pane in steps of one cell.
# M-Up, M-Down
# M-Left, M-Right
#             Resize the current pane in steps of five cells.
# q           Briefly display pane indexes.
# :           Enter the tmux command prompt.
# ?           List all key bindings.
# [           Enter copy mode to copy text or view the history.
# Page Up     Enter copy mode and scroll one page up.
# Up, Down
# Left, Right
# ]           Paste the most recently copied buffer of text.
# C-z         Suspend the tmux client.
# $           Rename the current session.
# s           Select a new session for the attached client interactively.
# L           Switch the attached client back to the last session.
# d           Detach the current client.
# D           Choose a client to detach.
# r           Force redraw of the attached client.
# t           Show the time.
# ~           Show previous messages from tmux, if any.

#If you have issues scrolling with Shift-Page Up/Down in your terminal, the following will remove the smcup and rmcup capabilities for any term that reports itself as anything beginning with xterm:
set-option -ga terminal-overrides ',xterm*:smcup@:rmcup@'
#This tricks the terminal emulator into thinking Tmux is a full screen application like mutt, which will make the scrollback be recorded properly.
#Beware however, it will get a bit messed up when switching between windows/panes. Consider using Tmux's native scrollback instead.

# copy-mode
# Works in copy-mode with scrollback with `prefix + [`
# To exit copy-mode, press q in vi mode or ESC in emacs mode;
#   or `Enter` or `Ctrl-C` in either mode
bind Escape copy-mode
#bind-key -T vi-copy v begin-selection
#bind -Tcopy-mode-vi v send -X begin-selection
#bind-key -T vi-copy y copy-selection
#bind -Tcopy-mode-vi y send -X copy-selection


## tmux neovim
#  - ERROR: escape-time (500) is higher than 300ms
#    - SUGGESTIONS:
#      - Set escape-time in ~/.tmux.conf:
#          set-option -sg escape-time 10
set-option -sg escape-time 10
#      - See https://github.com/neovim/neovim/wiki/FAQ
#  - INFO: $TERM: screen
#  - ERROR: $TERM should be "screen-256color" or "tmux-256color" when running tmux.
#    - SUGGESTIONS:
#      - Set default-terminal in ~/.tmux.conf:
set-option -g default-terminal "screen-256color"
# Not working with "tmux-256color"
# Not working with "tmux+256color"
#      - See https://github.com/neovim/neovim/wiki/FAQ
# Make sure tmux knows that terminal it is running in support 256 colors. You may tell it tmux by using -2 option when launching it.


# git clone https://github.com/tmux-plugins/tmux-continuum.git ~/.tmux/tmux-continuum
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

#run-shell ~/.tmux/tmux-continuum/continuum.tmux

#run '~/.tmux/plugins/tpm/tpm'

bind '~' split-window "exec htop"
bind m command-prompt "split-window 'exec man %%'"
bind-key | split-window -h
bind-key - split-window -v
bind h split-window -h
bind v split-window -v

# Select prev/next pane
bind i select-pane -t :.-
bind o select-pane -t :.+

# -- Options ------------------------------------------------------------{{{1
# make the first window number start at 1
set-option -g base-index 1
set-option -g history-limit 300000
#set-option -g default-command zsh
set-option -g bell-action any

set-window-option -g mode-keys vi
set-window-option -g monitor-activity on


# -- Status bar ---------------------------------------------------------{{{1
set-option -g status-justify left
set-option -g status-bg default
set-option -g status-fg magenta
set-option -g status-left-length 90

set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg white

if '[ -z "$DISPLAY" -o -n "$SSH_CONNECTION" ]' 'set -g status-right "#[fg=bold]-- #[default]#[fg=yellow]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3) #[fg=cyan,bright]%H:%M #[fg=bold]--"'
if '[ -z "$DISPLAY" -o -n "$SSH_CONNECTION" ]' 'set -g status-right-length 50'

set-option -g set-titles on
set-option -g set-titles-string "#H / #S"

set-option -g message-attr bold
set-option -g message-bg black
set-option -g message-fg yellow
#show-options -g
set-option -g display-time 2000
set-option -g repeat-time 1000
set-option -g status-interval 5
set-option -g status-right '#[fg=Cyan,Bold]#h.#[fg=yellow]#S #[fg=blue]%a %d %b %R#[default]'
set-option -g status-keys vi

#set-environment -g LC_TMUX_SESSION 1

